What:		/sys/bus/dfl/devices/dfl_dev.X/type
Date:		Aug 2020
KernelVersion:	5.10
Contact:	Xu Yilun <yilun.xu@intel.com>
Description:	Read-only. It returns type of DFL FIU of the device. Now DFL
		supports 2 FIU types, 0 for FME, 1 for PORT.
		Format: 0x%x

What:		/sys/bus/dfl/devices/dfl_dev.X/feature_id
Date:		Aug 2020
KernelVersion:	5.10
Contact:	Xu Yilun <yilun.xu@intel.com>
Description:	Read-only. It returns feature identifier local to its DFL FIU
		type.
		Format: 0x%x

What:		/sys/bus/dfl/devices/.../driver_override
Date:		Sep 2020
KernelVersion:	5.10
Contact:	Xu Yilun <yilun.xu@intel.com>
Description:	This file allows the driver for a device to be specified. When
		specified, only a driver with a name matching the value written
		to driver_override will have an opportunity to bind to the
		device. The override is specified by writing a string to the
		driver_override file (echo vfio-mdev-dfl > driver_override) and
		may be cleared with an empty string (echo > driver_override).
		This returns the device to standard matching rules binding.
		Writing to driver_override does not automatically unbind the
		device from its current driver or make any attempt to
		automatically load the specified driver.  If no driver with a
		matching name is currently loaded in the kernel, the device
		will not bind to any driver.  This also allows devices to
		opt-out of driver binding using a driver_override name such as
		"none".  Only a single driver may be specified in the override,
		there is no support for parsing delimiters.
